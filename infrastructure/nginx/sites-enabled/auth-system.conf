# Spring Cloud Auth System - Main Server Configuration

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name localhost auth.local ivyarc.pro _;
    
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2 default_server;
    server_name localhost auth.local ivyarc.pro _;
    
    # SSL Configuration
    ssl_certificate /root/spring-cloud-auth-workspace/infrastructure/nginx/ssl/auth-system.crt;
    ssl_certificate_key /root/spring-cloud-auth-workspace/infrastructure/nginx/ssl/auth-system.key;
    
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Basic configuration
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Logging
    access_log /root/spring-cloud-auth-workspace/infrastructure/nginx/logs/auth-system-access.log auth_system_log;
    error_log /root/spring-cloud-auth-workspace/infrastructure/nginx/logs/auth-system-error.log warn;
    
    # Rate limiting
    limit_req zone=general_limit burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;
    
    # Frontend - Angular Application (root path)
    location / {
        limit_req zone=general_limit burst=50 nodelay;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        
        proxy_pass http://frontend;
    }
    
    # API Gateway routes
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        proxy_pass http://api_gateway/;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Admin - Eureka Server
    location /admin/eureka {
        limit_req zone=admin_limit burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/admin/eureka/?(.*)$ /$1 break;
        proxy_pass http://eurekaservice;
    }
    
    # Admin - Config Server
    location /admin/config {
        limit_req zone=admin_limit burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/admin/config/?(.*)$ /$1 break;
        proxy_pass http://configservice;
    }
    
    # Health endpoints
    location = /health {
        limit_req zone=general_limit burst=10 nodelay;
        add_header Content-Type application/json;
        return 200 '{"status":"UP","message":"Nginx proxy is running","services":{"frontend":"http://localhost:4200","eureka":"http://localhost:8761/actuator/health","config":"http://localhost:8888/actuator/health","gateway":"http://localhost:8082/actuator/health"},"timestamp":"$time_iso8601"}';
    }
    
    location /health/frontend {
        proxy_pass http://frontend;
        proxy_intercept_errors on;
        error_page 502 503 504 = @frontend_down;
    }
    
    location @frontend_down {
        add_header Content-Type application/json;
        return 503 '{"status":"DOWN","service":"frontend","timestamp":"$time_iso8601"}';
    }
    
    location /health/eureka {
        proxy_pass http://eurekaservice/actuator/health;
    }
    
    location /health/config {
        proxy_pass http://configservice/actuator/health;
    }
    
    location /health/api-gateway {
        proxy_pass http://api_gateway/actuator/health;
    }
    
    location /health/auth-service {
        proxy_pass http://auth_service/actuator/health;
    }
    
    # Nginx status
    location /nginx-status {
        limit_req zone=admin_limit burst=2 nodelay;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        stub_status on;
        access_log off;
    }
    
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    # Block sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}