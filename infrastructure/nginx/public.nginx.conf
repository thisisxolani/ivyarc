# Nginx reverse proxy for external access with TLS
# Replace YOUR_DOMAIN with your actual domain

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream frontend_dev { server 127.0.0.1:4200; }
upstream gateway_dev  { server 127.0.0.1:8080; }
upstream auth_service { server 127.0.0.1:8081; }
upstream discovery    { server 127.0.0.1:8761; }

server {
  listen 80;
  server_name YOUR_DOMAIN;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name YOUR_DOMAIN;

  ssl_certificate     /etc/letsencrypt/live/YOUR_DOMAIN/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN/chain.pem;

  # Basic TLS config
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers off;

  client_max_body_size 10m;
  gzip on;
  gzip_types text/plain application/javascript application/json text/css application/xml+rss image/svg+xml;

  # Frontend dev server (HMR/WebSocket)
  location / {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout 300s;
    proxy_pass http://frontend_dev;
  }

  # API via gateway
  location /api/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_connect_timeout 5s;
    proxy_read_timeout 300s;
    proxy_pass http://gateway_dev;
  }

  # Optional direct auth endpoints (uncomment to bypass gateway during dev)
  # location ~ ^/api/v1/auth/ {
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Forwarded-Proto https;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_pass http://auth_service;
  # }

  # Eureka (optional)
  location /eureka/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://discovery;
  }
}

