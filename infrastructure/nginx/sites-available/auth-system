# Rate limiting configurations (should be in http context)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=admin_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=200r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# Upstream server configurations for load balancing
upstream frontend {
    least_conn;
    server 127.0.0.1:4200 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream api_gateway {
    least_conn;
    server 127.0.0.1:8082 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream auth_service {
    least_conn;
    server 127.0.0.1:8081 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream eureka_service {
    least_conn;
    server 127.0.0.1:8761 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

upstream config_service {
    least_conn;
    server 127.0.0.1:8888 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

# WebSocket upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Custom log format for detailed request tracking
log_format auth_system_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time $upstream_response_time '
                          '$upstream_addr "$upstream_status"';

# HTTP to HTTPS redirect server block
server {
    listen 80;
    server_name localhost auth.local _;
    
    # Security headers even for redirect
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl http2 default_server;
    server_name localhost auth.local _;
    
    # SSL Configuration
    ssl_certificate /root/spring-cloud-auth-workspace/infrastructure/nginx/ssl/auth-system.crt;
    ssl_certificate_key /root/spring-cloud-auth-workspace/infrastructure/nginx/ssl/auth-system.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # General server configuration
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Hide nginx version
    server_tokens off;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;
        
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Access and error logs
    access_log /root/spring-cloud-auth-workspace/infrastructure/nginx/logs/auth-system-access.log auth_system_log;
    error_log /root/spring-cloud-auth-workspace/infrastructure/nginx/logs/auth-system-error.log warn;
    
    # Rate limiting
    limit_req zone=general_limit burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;
    
    # Frontend - Angular Application (serves at root /)
    location / {
        # Rate limiting for frontend
        limit_req zone=general_limit burst=50 nodelay;
        
        # Proxy headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Timeouts and buffering
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        proxy_buffering off;
        
        # WebSocket support for Angular dev server
        proxy_pass http://frontend;
        
        # Fallback for Angular routing
        try_files $uri $uri/ @angular_fallback;
    }
    
    # Angular fallback for client-side routing
    location @angular_fallback {
        proxy_pass http://frontend;
        proxy_intercept_errors on;
        error_page 404 = @angular_index;
    }
    
    location @angular_index {
        proxy_pass http://frontend/;
    }
    
    # API Endpoints - Routed through API Gateway
    location /api/ {
        # Strict rate limiting for API endpoints
        limit_req zone=api_limit burst=10 nodelay;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # API-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable response buffering for APIs
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        proxy_pass http://api_gateway/;
        
        # CORS handling for API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Direct Auth Service Access (bypass gateway for specific auth endpoints)
    location /auth/direct/ {
        limit_req zone=auth_limit burst=5 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/auth/direct/(.*)$ /$1 break;
        proxy_pass http://auth_service;
    }
    
    # Admin Interface - Eureka Server
    location /admin/eureka {
        limit_req zone=admin_limit burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove /admin/eureka prefix and proxy to eureka
        rewrite ^/admin/eureka/?(.*)$ /$1 break;
        proxy_pass http://eureka_service;
    }
    
    # Admin Interface - Config Server
    location /admin/config {
        limit_req zone=admin_limit burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove /admin/config prefix and proxy to config server
        rewrite ^/admin/config/?(.*)$ /$1 break;
        proxy_pass http://config_service;
    }
    
    # Combined Health Check Endpoint
    location = /health {
        limit_req zone=general_limit burst=10 nodelay;
        
        add_header Content-Type application/json;
        return 200 '{"status":"UP","message":"Nginx proxy is running","services":{"frontend":"http://localhost:4200","eureka":"http://localhost:8761/actuator/health","config":"http://localhost:8888/actuator/health","gateway":"http://localhost:8082/actuator/health"},"timestamp":"$time_iso8601"}';
    }
    
    # Individual service health endpoints
    location /health/frontend {
        proxy_pass http://frontend;
        proxy_intercept_errors on;
        error_page 502 503 504 = @frontend_down;
    }
    
    location @frontend_down {
        add_header Content-Type application/json;
        return 503 '{"status":"DOWN","service":"frontend","timestamp":"$time_iso8601"}';
    }
    
    location /health/api-gateway {
        proxy_pass http://api_gateway/actuator/health;
    }
    
    location /health/auth-service {
        proxy_pass http://auth_service/actuator/health;
    }
    
    location /health/eureka {
        proxy_pass http://eureka_service/actuator/health;
    }
    
    location /health/config {
        proxy_pass http://config_service/actuator/health;
    }
    
    # Nginx status endpoint for monitoring
    location /nginx-status {
        limit_req zone=admin_limit burst=2 nodelay;
        
        # Restrict access to localhost only
        allow 127.0.0.1;
        allow ::1;
        deny all;
        
        stub_status on;
        access_log off;
    }
    
    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        
        # Cache headers
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Security headers for static assets
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}