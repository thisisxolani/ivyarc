# Nginx reverse proxy for external access via IP over HTTPS (self-signed cert)
# Generate a self-signed cert with your server's public IP in SAN (see docs).

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream frontend_dev { server 127.0.0.1:4200; }
upstream auth_service { server 127.0.0.1:8081; }
upstream gateway_dev  { server 127.0.0.1:8080; }
upstream discovery    { server 127.0.0.1:8761; }

server {
  listen 80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2 default_server;
  server_name _;

  # Self-signed or provided certs mounted via docker-compose ./ssl -> /etc/ssl/nginx
  ssl_certificate     /etc/ssl/nginx/dev-ip.crt;
  ssl_certificate_key /etc/ssl/nginx/dev-ip.key;

  # Basic TLS settings
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;

  client_max_body_size 10m;
  gzip on;
  gzip_types text/plain application/javascript application/json text/css application/xml+rss image/svg+xml;

  # Frontend dev server (Angular) at /
  location / {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    # Bypass Angular dev-server host check to prevent HTML error pages for JS
    proxy_set_header Host 127.0.0.1:4200;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_read_timeout 300s;
    proxy_pass http://frontend_dev;
  }

  # Direct auth endpoints (bypass gateway for quick external test)
  location ~ ^/api/v1/auth/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_connect_timeout 5s;
    proxy_read_timeout 120s;
    proxy_pass http://auth_service;
  }

  # If you prefer the gateway, comment block above and use this instead:
  # location /api/ {
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Forwarded-Proto https;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_pass http://gateway_dev;
  # }

  # Eureka (optional)
  location /eureka/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://discovery;
  }

  # Health shortcuts
  location /health/auth { proxy_pass http://auth_service/actuator/health; }
  location /health/gateway { proxy_pass http://gateway_dev/actuator/health; }
  location /health/discovery { proxy_pass http://discovery/actuator/health; }
}
