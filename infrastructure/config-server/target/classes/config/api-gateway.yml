# API Gateway specific configuration
server:
  port: 8080

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
      routes:
        # Auth Service Routes
        - id: auth-service-login
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/login
            - Method=POST
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 10
                redis-rate-limiter.burst-capacity: 20
                
        - id: auth-service-register
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/register
            - Method=POST
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 5
                redis-rate-limiter.burst-capacity: 10
                
        - id: auth-service-refresh
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/refresh
            - Method=POST
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 20
                redis-rate-limiter.burst-capacity: 40
                
        # User Service Routes
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 50
                redis-rate-limiter.burst-capacity: 100
                
        # Authorization Service Routes
        - id: authorization-service
          uri: lb://authorization-service
          predicates:
            - Path=/api/v1/auth/roles/**,/api/v1/auth/permissions/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
              args:
                required-role: ADMIN
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 30
                redis-rate-limiter.burst-capacity: 60
                
        # Audit Service Routes
        - id: audit-service
          uri: lb://audit-service
          predicates:
            - Path=/api/v1/audit/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
              args:
                required-permission: audit:read
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 20
                redis-rate-limiter.burst-capacity: 40

      default-filters:
        - name: GlobalCorsFilter
        - name: GlobalLoggingFilter
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallbackUri: forward:/fallback
            
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}

# Rate limiting configuration
gateway:
  rate-limit:
    default:
      replenish-rate: 100
      burst-capacity: 200
    authenticated:
      replenish-rate: 500
      burst-capacity: 1000
    admin:
      replenish-rate: 1000
      burst-capacity: 2000

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      defaultCircuitBreaker:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 10
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          
  retry:
    instances:
      defaultRetry:
        max-attempts: 3
        wait-duration: 1s

# Security configuration
security:
  jwt:
    public-key: ${JWT_PUBLIC_KEY:classpath:keys/public.pem}
    
# CORS configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
  allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.company.auth.gateway: DEBUG